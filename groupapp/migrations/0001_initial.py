# Generated by Django 3.2.23 on 2024-01-08 11:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('cover_photo', models.ImageField(blank=True, default='groupdefault/group.jpg', null=True, upload_to='group_cover/')),
                ('group', models.ManyToManyField(blank=True, to='auth.Group')),
                ('members', models.ManyToManyField(related_name='members', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserGroups_Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(choices=[('accept', 'accept'), ('send', 'send')], max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='group_files/')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupauthor', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(blank=True, related_name='usergroupposts_likes', to=settings.AUTH_USER_MODEL)),
                ('usergroups', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='groupapp.usergroups')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usergrouppost', to='groupapp.usergroups_post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usergroupuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group_reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.TextField()),
                ('reply_pics', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('comment_id', models.IntegerField()),
                ('reply_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_reply_author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group_coment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField()),
                ('comment_pics', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('comment_date_created', models.DateTimeField(auto_now_add=True)),
                ('comment_type', models.CharField(default='group', editable=False, max_length=100)),
                ('comment_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_comment_author', to=settings.AUTH_USER_MODEL)),
                ('comment_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_comments', to='groupapp.usergroups_post')),
                ('replies', models.ManyToManyField(blank=True, related_name='comment_reply', to='groupapp.Group_reply')),
            ],
        ),
    ]
